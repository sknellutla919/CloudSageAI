trigger:
  branches:
    include:
      - main2

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: Infrastructure
    jobs:
      - job: Terraform
        steps:
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: "1.3.2"

          - script: |
              cd terraform
              terraform init
              terraform apply -auto-approve
            displayName: "Terraform Apply"

  - stage: Build_And_Push_Containers
    dependsOn: Infrastructure
    jobs:
      - job: BuildContainers
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: "YOUR_AZURE_CONTAINER_REGISTRY"
              repository: "chatbot-ui"
              command: "buildAndPush"
              Dockerfile: "ui/Dockerfile"
              buildContext: "ui/"

          - task: Docker@2
            inputs:
              containerRegistry: "YOUR_AZURE_CONTAINER_REGISTRY"
              repository: "chatbot-api"
              command: "buildAndPush"
              Dockerfile: "api/Dockerfile"
              buildContext: "api/"

  - stage: Deploy_UI_and_API
    dependsOn: Build_And_Push_Containers
    jobs:
      - deployment: DeployToAKS
        environment: "production"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: Kubernetes@1
                  inputs:
                    connectionType: "Azure Resource Manager"
                    azureSubscription: "Azure-Connection"
                    azureResourceGroup: "ml-chatbot-rg"
                    kubernetesCluster: "ml-chatbot-aks"
                    command: "apply"
                    arguments: "-f k8s/deployment.yaml -f k8s/service.yaml"

  - stage: Deploy_Functions
    dependsOn: Infrastructure
    jobs:
      - deployment: DeployAzureFunctions
        environment: "production"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureFunctionApp@1
                  inputs:
                    azureSubscription: "Azure-Connection"
                    appName: "ml-chatbot-api"
                    package: "$(Pipeline.Workspace)/drop/function-app.zip"
